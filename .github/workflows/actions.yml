name: CI

on:
  push:
    branches:
      - actions

jobs:
  LARAVEL-TEST:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: soundoclock
        ports:
          - 3306:3306
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: mongoadmin
          MONGO_INITDB_ROOT_PASSWORD: mongopassword

    steps:
      - name: Obtaining repository code
        uses: actions/checkout@v4

      - name: Checking Laravel
        run: |
          cd laravel 
          composer install
          cp .env.example .env
          php artisan migrate --env=testing
          php artisan migrate:fresh --seed
          php artisan test
      - run: echo "üçè This job's status is ${{ job.status }}."

  NODE-TEST:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: soundoclock
        ports:
          - 3306:3306
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: mongoadmin
          MONGO_INITDB_ROOT_PASSWORD: mongopassword

    steps:
      - name: Obtaining repository code
        uses: actions/checkout@v4

      - name: Engegar Laravel
        run: |
          cd laravel 
          composer install
          cp .env.example .env
          php artisan migrate --env=testing
          php artisan migrate:fresh --seed
          php artisan serve > /dev/null 2>&1 &

      - name: Checking Node
        run: |
          cd node
          npm install
          cp .env.example .env
          npm run dev -- --host=127.0.0.1 > node.log 2>&1 &
          npm run test -- --host=127.0.0.1
      - run: echo "üçè This job's status is ${{ job.status }}."

  DEPLOYMENT:
    needs: [LARAVEL-TEST, NODE-TEST]
    runs-on: ubuntu-latest
    steps:
      - name: Obtenint el codi del respositori
        uses: actions/checkout@v4

      - name: Check SSH connection
        run: |
          echo "${{ secrets.SECRET_KEY }}" > ~/prod_key.pem
          chmod 600 ~/prod_key.pem
          cd ${{ github.workspace }}
          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ~/prod_key.pem ${{ secrets.PROD_USER }}@${{ secrets.PROD_HOST }} "docker stop \$(docker ps -aq)"
          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ~/prod_key.pem ${{ secrets.PROD_USER }}@${{ secrets.PROD_HOST }} "cd projecte && rm -r laravel"
          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ~/prod_key.pem ${{ secrets.PROD_USER }}@${{ secrets.PROD_HOST }} "cd projecte && mkdir laravel && cp .env laravel/.env"
          scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i "~/prod_key.pem" -r ./laravel/* ${{ secrets.PROD_USER }}@${{ secrets.PROD_HOST }}:./projecte/laravel
          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ~/prod_key.pem ${{ secrets.PROD_USER }}@${{ secrets.PROD_HOST }} "cd projecte && docker compose up -d"
      - run: echo "üçè This job's status is ${{ job.status }}."